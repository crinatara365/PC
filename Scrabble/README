Tararache Crina-Andreea, 314CB

- Task0:
Pentru inceput, parcurg o matrice care reprezinta tabla de joc in cadrul careia am initializat toate pozitiile cu caracterul ".". In functie de numarul task-ului citit, 
programul va sti ce if sa execute.

- Task1: 
Cu ajutorul functiei fgets citim elemente de tip char pe care ulterior le transformam in numere prin intermediul functiei atoi. Astfel, citim numarul de cuvinte date.
Pentru fiecare cuvant, citim coordonatele, directia, urmand ca in variabila p sa ramana cuvantul in sine. Apoi, in functie de valoarea lui D, salvam cuvantul pe tabla de
joc: primul caracter din p este pus pe pozitia indicata de coord X si Y.

- Task2: 
Am creat un vector in care am pus numarul de puncte aferent fiecarei litere din alfabet. La fel ca la task-ul precedent, citim numarul de cuvinte, apoi citim fiecare 
cuvant in parte si  parcurgem fiecare litera a fiecarui cuvant. Aflam pozitia literei in vectorul nostru si accea va fi valoarea adaugata la punctajul jucatorului. 
Verificam la ce linie suntem pentru a sti cui adaugam punctele. (linie para -> primul jucator; linie impara -> al doilea jucator)

- Task3: 
Spre deosebire de celalate task-uri acum citim si 2 string-uri pentru a determina daca avem sau nu bonus. Am ales sa atribui valorile in XX si YY pentru ca initial am 
folosit functia strcpy si nu a mers din cauza faptului ca exista "\0" la finalul string-ului. Urmatorul pas este sa calculam punctajul jucatorilor fara punctele de bonus.
Apoi, pentru fiecare cuvant citit caut stringul XX in componenta cuvantului. Daca exista, in functie de D, ma deplasez pe orizontala sau verticala pentru a vedea cati de 
1 gasesc in tabla de bonus pe pozitiile literelor din cuvantul meu. Retin acest numar intr-o variabila pentru a sti de care ori inmultesc cu 2 punctajul pe care il am 
deja. Parcurg aceeasi pasi pentru stringul YY cu diferenta ca acesta trebuie sa se regaseasca in ultimele doua litere ale cuvantului. La final adaug la total puntajul W 
si T fie ca e obstinut cu bonus sau nu. De asemenea, resetez variabilele inaintea citirii urmatorului cuvant. 

- Task4:
Luam un vector de dimensiue suficient de mare pe care il umplem cu 0. Luam fiecare cuvant citit si il trecem pe tabla de joc, pentru ca apoi sa compaaram cuvantul citit 
cu fiecare cuvant din vectorul words. Daca acesta se regaseste in vector, dam valoarea 1 pozitiei cuvantului in vectorul words. Mai pe scurt, in vectorul plin de 0, o sa 
avem 1 pentru cuvintele din words deja utilizate pentru a sti sa nu le luam in calcul. Parcurgem vectorul v de fiecare data cand gasim 0 (cuvantul din words aferent 
pozitiei mele din v nu a fost folosit) si retinem in variabila "x" cuvantul din words. Incepem sa verificam celelalte conditii. Mai intai, verificam daca prima litera a 
cuvantul din x se afla pe tabla de joc. Daca acest lucru se intampla, verificam daca cuvantul ar avea loc sa fie scris pe orizontala (sa nu depaseasca marginile tablei 
si sa nu se suprascrie peste alte litere). Daca nu este posibil, verificam acest lucru pe verticala. Apoi, in functie de directia pe care se poate se scrie cuvantul, il 
trecem pe tabla de joc. Daca nu se poate scrie pe nicio directie, se trece automat la urmatorul cuvantul. 
